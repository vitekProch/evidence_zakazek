Index: app/Presenters/SignPresenter.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Presenters;\r\nuse App\\Model\\Facades\\UserManager;\r\nuse Nette\\Application\\UI\\Form;\r\nuse App\\Exceptions;\r\nclass SignPresenter extends BasePresenter\r\n{\r\n\r\n    private UserManager $userManager;\r\n    /**\r\n     * @var mixed\r\n     */\r\n\r\n    public function __construct(UserManager $userManager)\r\n    {\r\n        $this->userManager = $userManager;\r\n    }\r\n    //Registration\r\n    protected function createComponentSignUpForm(): Form\r\n    {\r\n        $form = new Form;\r\n        $form->addText('username', 'Jméno zaměstnance: ')\r\n            ->setRequired('Vyplňte prosím %label');\r\n\r\n        $form->addText('employee_id', 'Číslo zaměstnance: ')\r\n            ->addRule($form::NUMERIC, 'Číslo zaměstnance se musí skládat pouze z číslic')\r\n            ->addRule($form::MIN_LENGTH, 'Číslo musí mít alespoň %d znaků', 4)\r\n            ->setRequired('Vyplňte prosím %label');\r\n\r\n        $form->addPassword('password', 'Heslo: ');\r\n        $form->addPassword('passwordVerify', 'Heslo pro kontrolu:')\r\n            ->setRequired('Zadejte prosím heslo ještě jednou pro kontrolu')\r\n            ->addRule($form::EQUAL, 'Hesla se neshodují', $form['password'])\r\n            ->setOmitted();\r\n\r\n        $form->addSubmit('send', 'Registrovat');\r\n        $form->onSuccess[] = [$this, 'formSucceeded'];\r\n        return $form;\r\n\r\n    }\r\n    public function formSucceeded(Form $form, $data): void\r\n    {\r\n        try {\r\n            $this->userManager->add($data->username,$data->password, $data->employee_id);\r\n            $this->flashMessage('Zaměstnanec byl úspěšně registrován.', 'success');\r\n            $this->redirect('Homepage:');\r\n        }\r\n        catch (Exceptions\\DuplicateNameException $e){\r\n            $form->addError(\"Číslo zaměstnance již existuje\");\r\n        }\r\n    }\r\n\r\n    //Sign In\r\n\r\n    protected function createComponentSignInForm(): Form\r\n    {\r\n        $form = new Form;\r\n        $form->addText('username', 'Zaměstnanecké číslo:')\r\n            ->setRequired('Prosím vyplňte %label.');\r\n\r\n        $form->addPassword('password', 'Heslo:')\r\n            ->setRequired('Prosím vyplňte své heslo.');\r\n        $shifts = [\r\n            '1' => 'Ranní',\r\n            '2' => 'Odpolední',\r\n            '3' => 'Noční',\r\n        ];\r\n\r\n        $form->addSelect('shift', 'Směna: ', $shifts);\r\n\r\n        $form->addSubmit('send', 'Přihlásit');\r\n\r\n        $form->onSuccess[] = [$this, 'signInFormSucceeded'];\r\n\r\n        return $form;\r\n\r\n\r\n    }\r\n    public function signInFormSucceeded(Form $form, \\stdClass $values): void\r\n    {\r\n        try {\r\n            $this->user->setExpiration('9 hour');\r\n            $this->getUser()->login($values->username, $values->password);\r\n            $this->employeeModel->insertShift($values->shift, $values->username);\r\n            $this->flashMessage('Přihlášení bylo úspěšné.','success');\r\n            $this->redirect('Homepage:');\r\n\r\n        } catch (Exceptions\\IncorrectNameException $e) {\r\n            $form->addError(\"Nesprávné uživatelské jméno\");\r\n        } catch (Exceptions\\IncorrectPassword $e) {\r\n            $form->addError(\"Nesprávné uživatelské heslo\");\r\n        }\r\n    }\r\n\r\n    //Sign Out\r\n    public function actionOut(): void\r\n    {\r\n        $this->user->logout(true);\r\n        $this->getUser()->logout();\r\n        $this->flashMessage('Odhlášení bylo úspěšné.','success');\r\n        $this->redirect('Sign:in');\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/Presenters/SignPresenter.php b/app/Presenters/SignPresenter.php
--- a/app/Presenters/SignPresenter.php	(revision 580521ccc5fc12ff1705803344ec61f27d865bd5)
+++ b/app/Presenters/SignPresenter.php	(date 1661932688856)
@@ -4,6 +4,8 @@
 use App\Model\Facades\UserManager;
 use Nette\Application\UI\Form;
 use App\Exceptions;
+use Nette\Utils\DateTime;
+
 class SignPresenter extends BasePresenter
 {
 
@@ -11,6 +13,14 @@
     /**
      * @var mixed
      */
+    protected function afterRender()
+    {
+        parent::afterRender(); // TODO: Change the autogenerated stub
+        $this['signInForm']->setValues(array(
+            'shift' => $this->signModel->automaticShiftSelect()
+        ), true);
+    }
+
 
     public function __construct(UserManager $userManager)
     {
@@ -101,4 +111,5 @@
         $this->flashMessage('Odhlášení bylo úspěšné.','success');
         $this->redirect('Sign:in');
     }
+
 }
\ No newline at end of file
Index: config/services.neon
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>services:\r\n\t- App\\Router\\RouterFactory::createRouter\r\n\r\n\t- App\\Repository\\BaseRepository\r\n\t- App\\Repository\\TubeProductionRepository\r\n\t- App\\Repository\\EmployeeRepository\r\n\t- App\\Repository\\TubeDiameterRepository\r\n\t- App\\Repository\\TubeExcessRepository\r\n\r\n\t- App\\Forms\\FormFactory\r\n\t- App\\Forms\\SignInFormFactory\r\n\t- App\\Forms\\SignUpFormFactory\r\n\r\n\t- App\\Model\\EmployeeModel\r\n\t- App\\Model\\Facades\\UserManager\r\n\t- App\\Model\\TubeProductionModel\r\n\t- App\\Model\\TubeDiameterModel\r\n\t- App\\Model\\TubeExcessModel\r\n\r\n\t- App\\Model\\My_AuthorizatorFactory\r\n\t-\r\n\t    class: Nette\\Security\\Permission\r\n\t    factory: @App\\Model\\My_AuthorizatorFactory::create
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/services.neon b/config/services.neon
--- a/config/services.neon	(revision 580521ccc5fc12ff1705803344ec61f27d865bd5)
+++ b/config/services.neon	(date 1661932487407)
@@ -16,6 +16,7 @@
 	- App\Model\TubeProductionModel
 	- App\Model\TubeDiameterModel
 	- App\Model\TubeExcessModel
+	- App\Model\SignModel
 
 	- App\Model\My_AuthorizatorFactory
 	-
Index: app/Presenters/HomepagePresenter.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\ndeclare(strict_types=1);\r\n\r\nnamespace App\\Presenters;\r\n\r\nuse Nette\\Application\\UI\\Form;\r\n\r\n\r\n\r\nclass HomepagePresenter extends BasePresenter\r\n{\r\n    public function startup()\r\n    {\r\n\r\n        parent::startup();\r\n        if (!$this->getUser()->isLoggedIn()) {\r\n            $this->flashMessage('Pro vytvoření nové zakázky je nutné se přihlásit!', 'error');\r\n            $this->redirect('Sign:in');\r\n        }\r\n    }\r\n    public function renderDefault($data)\r\n    {\r\n        $tube_diameters = $this->tubeDiameterModel->getDiameters();\r\n\r\n        $tube_production = $this->tubeProductionModel->getTubeProduction(7,0);\r\n        $this['orderTubeForm']->setValues(array(\r\n            'diameters' => $this->tubeProductionModel->getLastDiameter()\r\n        ), true);\r\n\r\n        $this->template->tube_production = $tube_production;\r\n        $this->template->tube_diameters = $tube_diameters;\r\n        if (!isset($this->template->data)) {\r\n            $this->template->data = $data;\r\n        }\r\n    }\r\n\r\n    protected function createComponentOrderTubeForm(): Form\r\n    {\r\n        $form = new Form;\r\n        $form->addText('order_id', 'číslo zakázky')\r\n            ->addRule($form::LENGTH, 'Číslo zakázky může být krátné minimálně 6 číslic',[6,7])\r\n            ->addRule($form::NUMERIC, 'Číslo zakázky se musí skládat pouze z číslic')\r\n            ->setRequired('Vyplňte prosím %label');\r\n\r\n        $diameters = $this->tubeDiameterModel->getDiameters();\r\n        $form->addSelect('diameters', 'Průměr: ', $diameters);\r\n\r\n        $form->addText('made_quantity', 'počet kusů')\r\n            ->addRule($form::NUMERIC, 'Počet kusů se musí skládat pouze z číslic')\r\n            ->addRule($form::MAX_LENGTH, 'Počet kusů může mít maximálně %d znaků', 4)\r\n            ->setRequired('Vyplňte prosím %label');\r\n        $form->addSubmit('send', 'Uložit');\r\n        $form->onSuccess[] = [$this, 'orderTubeFormSucceeded'];\r\n        return $form;\r\n    }\r\n\r\n    public function orderTubeFormSucceeded(\\stdClass $data): void\r\n    {\r\n        $name = $this->user->getIdentity()->shift_id;\r\n        $this->tubeProductionModel->insertNewData($data->order_id, $this->getUser()->id, $data->diameters, $data->made_quantity,$name);\r\n        $this->flashMessage('Zakázka byla uložena', 'success');\r\n        $this->redirect('this');\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/Presenters/HomepagePresenter.php b/app/Presenters/HomepagePresenter.php
--- a/app/Presenters/HomepagePresenter.php	(revision 580521ccc5fc12ff1705803344ec61f27d865bd5)
+++ b/app/Presenters/HomepagePresenter.php	(date 1661931681745)
@@ -24,6 +24,7 @@
         $tube_diameters = $this->tubeDiameterModel->getDiameters();
 
         $tube_production = $this->tubeProductionModel->getTubeProduction(7,0);
+
         $this['orderTubeForm']->setValues(array(
             'diameters' => $this->tubeProductionModel->getLastDiameter()
         ), true);
Index: app/Presenters/BasePresenter.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Presenters;\r\n\r\nuse Nette;\r\nuse Nette\\Application\\UI\\Form;\r\nuse App\\Model\\EmployeeModel;\r\nuse App\\Model\\TubeDiameterModel;\r\nuse App\\Model\\TubeExcessModel;\r\nuse App\\Model\\TubeProductionModel;\r\n\r\nclass BasePresenter extends Nette\\Application\\UI\\Presenter\r\n{\r\n    /**\r\n     * @var TubeProductionModel\r\n     * @inject\r\n     */\r\n    public TubeProductionModel $tubeProductionModel;\r\n\r\n    /**\r\n     * @var EmployeeModel\r\n     * @inject\r\n     */\r\n    public EmployeeModel $employeeModel;\r\n\r\n    /**\r\n     * @var TubeDiameterModel\r\n     * @inject\r\n     */\r\n    public TubeDiameterModel $tubeDiameterModel;\r\n\r\n    /**\r\n     * @var TubeExcessModel\r\n     * @inject\r\n     */\r\n    public TubeExcessModel $tubeExcessModel;\r\n\r\n\r\n\r\n    protected function createComponentSearchForm()\r\n    {\r\n        $form = new Form;\r\n        $form->addText('search_value', 'Hledat:')\r\n            ->setRequired(TRUE);\r\n        $form->addSubmit('send', 'Search');\r\n        $form->onSuccess[] = [$this, 'searchFormSucceeded'];\r\n        return $form;\r\n    }\r\n    public function searchFormSucceeded(Form $form, $values): void\r\n    {\r\n        $this->redirect(\"Search:search\", [$values->search_value]);\r\n    }\r\n        protected function renderLayout()\r\n    {\r\n        $names = $this->user->getIdentity()->getData();\r\n        $this->template->layout = $names;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/Presenters/BasePresenter.php b/app/Presenters/BasePresenter.php
--- a/app/Presenters/BasePresenter.php	(revision 580521ccc5fc12ff1705803344ec61f27d865bd5)
+++ b/app/Presenters/BasePresenter.php	(date 1661932543226)
@@ -2,12 +2,14 @@
 
 namespace App\Presenters;
 
+
 use Nette;
 use Nette\Application\UI\Form;
 use App\Model\EmployeeModel;
 use App\Model\TubeDiameterModel;
 use App\Model\TubeExcessModel;
 use App\Model\TubeProductionModel;
+use App\Model\SignModel;
 
 class BasePresenter extends Nette\Application\UI\Presenter
 {
@@ -35,6 +37,11 @@
      */
     public TubeExcessModel $tubeExcessModel;
 
+    /**
+     * @var SignModel
+     * @inject
+     */
+    public SignModel $signModel;
 
 
     protected function createComponentSearchForm()
Index: app/Model/SignModel.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/Model/SignModel.php b/app/Model/SignModel.php
new file mode 100644
--- /dev/null	(date 1661932638154)
+++ b/app/Model/SignModel.php	(date 1661932638154)
@@ -0,0 +1,32 @@
+<?php
+
+namespace App\Model;
+
+class SignModel
+{
+    public function automaticShiftSelect()
+    {
+        if((5 <= date('H')) && (date('H') < 13)){
+            if( (date('H') == 5) && (date('i') < 50)){
+                $shift = "3";
+            }
+            else
+                $shift = "1";
+        }
+        if((13 <= date('H')) && (date('H') < 21)){
+            if( (date('H') == 13) && (date('i') < 50)){
+                $shift = "1";
+            }
+            else
+                $shift = "2";
+        }
+        if((21 <= date('H')) || (date('H') < 5)){
+            if( (date('H') == 21) && (date('i') < 50)){
+                $shift = "2";
+            }
+            else
+                $shift = "3";
+        }
+        return $shift;
+    }
+}
\ No newline at end of file
